{
	"New command": {
		"scope": "csharp",
		"prefix": "newcommand",
		"body": [
			"class ${1:CommandName} : ICommand",
    		"{",
			"\tpublic CommandResult Execute(string[] args)",
			"\t{",
			"\t\t$0",
			"\t\treturn CommandResult.CreateOk($\"Default command.\");",
			"\t}",
			"\tpublic string GetHandle()",
			"\t{",
			"\t\treturn \"${2:handle}\";",
			"\t}",
			"}"
		]
	},
	"Get Asset": {
		"scope": "csharp",
		"prefix": "getasset",
		"body": [
			"AssetManager.GetAsset<${1:AssetClass}>(\"${2:assetname}\")"
		]
	},
	"New Component Property": {
		"scope": "csharp",
		"prefix": "newprop",
		"body": [
			"private ${1:type} _${2};",
			"public ${1:type} ${2}",
			"{",
			"\tget => _${2};",
			"\tset",
			"\t{",
			"\t\tif (_${2} != value)",
			"\t\t{",
			"\t\t\t_${2} = value;",
			"\t\t\tthis.NotifyPropertyChanged();",
			"\t\t}",
			"\t}",
			"}$0"
		]
	}
}